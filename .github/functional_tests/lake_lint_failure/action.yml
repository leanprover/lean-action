name: 'Lake Lint Failure'
description: 'Run `lean-action` with `lake lint` with a failing dummy lint_driver'
inputs:
  toolchain:
    description: 'Toolchain to use for the test'
    required: true
runs: 
  using: 'composite'
  steps:
    # TODO: once `lean-action` supports just setup, use it here
    - name: install elan
      run: |
        set -o pipefail
        curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- -y --default-toolchain ${{ inputs.toolchain }}
        echo "$HOME/.elan/bin" >> "$GITHUB_PATH"
      shell: bash

    - name: create lake package
      run: |
        lake init dummylint
        lake update
      shell: bash 

    - name: create failing dummy lint driver
      run: |
        {
          echo "@[lint_driver]"
          echo "script dummy_lint do"
          echo "  println! \"Running fake lint...\""
          echo "  println! \"Fake lint failed!\""
          echo "  return 1" 
        } >> lakefile.lean
      shell: bash

    - name: "run `lean-action` with `lake lint`" 
      id: lean-action
      uses: ./
      continue-on-error: true # required so that the action does not fail the workflow
      with:
        lint: true
        use-github-cache: false

    - name: verify `lean-action` outcome failure
      env:
        OUTPUT_NAME: "lean-action outcome"
        EXPECTED_VALUE: "failure"
        ACTUAL_VALUE: ${{ steps.lean-action.outcome }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash
      
    - name: verify `lake build` success
      env:
        OUTPUT_NAME: "build-status"
        EXPECTED_VALUE: "SUCCESS"
        ACTUAL_VALUE: ${{ steps.lean-action.outputs.build-status }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash

    - name: verify `lake lint` failure
      env:
        OUTPUT_NAME: "lint-status"
        EXPECTED_VALUE: "FAILURE"
        ACTUAL_VALUE: ${{ steps.lean-action.outputs.lint-status }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash

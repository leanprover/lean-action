name: 'Auto Config True Functional Test'
description: |
  Run `lean-action` with `auto-config: true` and no feature inputs
  on a package generated with `lake init` and a dummy test runner added.
  Verify `lake build` and `lake test` run successfully.
  
  Run `lean-action` with `auto-config:true` and false feature inputs.
  Verify `lake build` and `lake test` did not run.
inputs:
  toolchain:
    description: 'Toolchain to use for the test'
    required: true
runs: 
  using: 'composite'
  steps:
    # TODO: once `lean-action` supports just setup, use it here
    - name: install elan
      run: |
        set -o pipefail
        curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- -y --default-toolchain ${{ inputs.toolchain }}
        echo "$HOME/.elan/bin" >> "$GITHUB_PATH"
      shell: bash

    - name: create lake package
      run: |
        lake init autoconfigtest .lean
        lake update
      shell: bash

    - name: create successful dummy test
      run: |
        {
          echo "@[test_runner]"
          echo "script dummy_test do"
          echo "  println! \"Running fake tests...\""
          echo "  println! \"Fake tests passed!\""
          echo "  return 0"
        } >> lakefile.lean
      shell: bash

    - name: create successful dummy lint
      run: |
        {
          echo "@[lint_driver]"
          echo "script dummy_lint do"
          echo "  println! \"Running fake lints...\""
          echo "  println! \"Fake lints passed!\""
          echo "  return 0"
        } >> lakefile.lean
      shell: bash
      
    - name: "run `lean-action` with auto-config: true" 
      id: lean-action
      uses: ./
      with:
        auto-config: true
        use-github-cache: false
    
    - name: verify `lean-action` outcome success
      env:
        OUTPUT_NAME: "lean-action.outcome"
        EXPECTED_VALUE: "success"
        ACTUAL_VALUE: ${{ steps.lean-action.outcome }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash

    - name: verify `lake build` success
      env:
        OUTPUT_NAME: "build-status"
        EXPECTED_VALUE: "SUCCESS"
        ACTUAL_VALUE: ${{ steps.lean-action.outputs.build-status }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash

    - name: verify `lake test` success
      env:
        OUTPUT_NAME: "test-status"
        EXPECTED_VALUE: "SUCCESS"
        ACTUAL_VALUE: ${{ steps.lean-action.outputs.test-status }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash
      
    - name: verify `lake lint` success
      env:
        OUTPUT_NAME: "lint-status"
        EXPECTED_VALUE: "SUCCESS"
        ACTUAL_VALUE: ${{ steps.lean-action.outputs.lint-status }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash
    

    - name: "run `lean-action` with auto-config: true and false feature inputs" 
      id: lean-action-false-feature-inputs
      uses: ./
      with:
        auto-config: true
        build: false
        test: false
        lint: false
        use-github-cache: false
    - name: verify `lake build` did not run
      env:
        OUTPUT_NAME: "build-status"
        EXPECTED_VALUE: ""
        ACTUAL_VALUE: ${{ steps.lean-action-false-feature-inputs.outputs.build-status }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash

    - name: verify `lake test` did not run
      env:
        OUTPUT_NAME: "test-status"
        EXPECTED_VALUE: ""
        ACTUAL_VALUE: ${{ steps.lean-action-false-feature-inputs.outputs.test-status }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash
      
    - name: verify `lake lint` did not run
      env:
        OUTPUT_NAME: "lint-status"
        EXPECTED_VALUE: ""
        ACTUAL_VALUE: ${{ steps.lean-action-false-feature-inputs.outputs.lint-status }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash

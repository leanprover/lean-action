name: 'Lake Init Success Functional Test'
description: 'Run `lean-action` on Lake package generated by `lake init`'
inputs:
  lake-init-arguments:
      description: 'arguments to pass to `lake init {lake-init-arguments}`'
      required: true
  toolchain:
    description: 'Toolchain to use for the test'
    required: true
runs: 
  using: 'composite'
  steps:
    # TODO: once `lean-action` supports just setup, use it here
    - name: install elan
      run: |
        set -o pipefail
        curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- -y --default-toolchain ${{ inputs.toolchain }}
        echo "$HOME/.elan/bin" >> "$GITHUB_PATH"
      shell: bash

    - name: create lake package with `lake init ${{ inputs.lake-init-arguments }}`
      run: |
        lake init ${{ inputs.lake-init-arguments }}
      shell: bash

    - name: "run `lean-action`"
      id: lean-action
      uses: ./
      with:
        use-github-cache: false

    - name: verify `lean-action` outcome success
      env:
        OUTPUT_NAME: "lean-action.outcome"
        EXPECTED_VALUE: "success"
        ACTUAL_VALUE: ${{ steps.lean-action.outcome }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash

    - name: verify `lake build` success
      env:
        OUTPUT_NAME: "build-status"
        EXPECTED_VALUE: "SUCCESS"
        ACTUAL_VALUE: ${{ steps.lean-action.outputs.build-status }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash

    - name: verify `lake test` didn't run
      env:
        OUTPUT_NAME: "test-status"
        EXPECTED_VALUE: "NOT_RUN"
        ACTUAL_VALUE: ${{ steps.lean-action.outputs.test-status }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash

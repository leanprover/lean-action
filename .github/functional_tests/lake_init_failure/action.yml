name: 'Lake Init Failure Functional Test'
description: 'Run `lean-action` on Lake package generated by `lake init` with a modified `lakefile.lean` to cause a build failure'
runs: 
  using: 'composite'
  steps:
    # TODO: once `lean-action` supports just setup, use it here
    - name: install elan
      run: |
        set -o pipefail
        curl -sSfL https://github.com/leanprover/elan/releases/download/v3.1.1/elan-x86_64-unknown-linux-gnu.tar.gz | tar xz
        ./elan-init -y --default-toolchain leanprover/lean4:v4.8.0-rc1
        echo "$HOME/.elan/bin" >> "$GITHUB_PATH"
      shell: bash

    - name: create lake package with `lake init`
      run: |
        lake init failingpackage
      shell: bash

    - name: introduce a syntax error in `lakefile.lean`
      run: |
        echo "syntax error" >> lakefile.lean
      shell: bash

    - name: "run `lean-action`"
      id: lean-action
      uses: ./
      continue-on-error: true # required so that the action does not fail the workflow
      with:
        test: false
        use-github-cache: false

    - name: verify `lean-action` outcome failure
      env:
        OUTPUT_NAME: "lean-action outcome"
        EXPECTED_VALUE: "failure"
        ACTUAL_VALUE: ${{ steps.lean-action.outcome }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash

    - name: verify `lake build` failure
      env:
        OUTPUT_NAME: "build-status"
        EXPECTED_VALUE: "FAILURE"
        ACTUAL_VALUE: ${{ steps.lean-action.outputs.build-status }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash

    - name: verify `lake test` didn't run
      env:
        OUTPUT_NAME: "test-status"
        EXPECTED_VALUE: "NOT_RUN"
        ACTUAL_VALUE: ${{ steps.lean-action.outputs.test-status }}
      run: .github/functional_tests/test_helpers/verify_action_output.sh
      shell: bash
